{"version":3,"sources":["weather/components/WeatherDetails/WeatherDetails.tsx","weather/components/WeatherOverview/WeatherOverview.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["WeatherDetails","props","useState","weekday","setWeekday","useEffect","date","Date","setDate","getDate","index","toLocaleDateString","Card","bg","style","width","Body","Title","height","src","data","weather","icon","Math","floor","temp","day","WeatherOverview","weatherData","setWeatherData","fetch","then","res","json","console","log","Navbar","variant","Container","Brand","className","display","justifyContent","daily","map","el","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAIaA,EAAiB,SAACC,GAE3B,MAA6BC,qBAA7B,mBAAOC,EAAP,KAAeC,EAAf,KASA,OAPAC,qBAAU,WACN,IAAMC,EAAO,IAAIC,KACjBD,EAAKE,QAAQF,EAAKG,UAAYR,EAAMS,OACpC,IAAMP,EAAUG,EAAKK,mBAAmB,QAAS,CAAER,QAAS,SAC5DC,EAAWD,MAIX,cAACS,EAAA,EAAD,CAAMC,GAAG,OAAOC,MAAO,CAACC,MAAO,SAA/B,SACI,eAACH,EAAA,EAAKI,KAAN,WACI,cAACJ,EAAA,EAAKK,MAAN,UAAad,IACd,qBAAKW,MAAO,CAACI,OAAO,QAApB,SACI,qBAAKC,IAAG,2CAAsClB,EAAMmB,KAAKC,QAAQ,GAAGC,KAA5D,eAEX,cAACV,EAAA,EAAKK,MAAN,UAAaM,KAAKC,MAAMvB,EAAMmB,KAAKK,KAAKC,aChB3CC,G,MAAkB,SAAC1B,GAE5B,MAAuCC,qBAAvC,mBAAQ0B,EAAR,KAAqBC,EAArB,KAWA,OATAxB,qBAAU,WACNyB,MAAM,+JACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACX,GACHc,QAAQC,IAAI,OAAOf,GACnBS,EAAeT,QAEzB,IAGE,gCACI,cAACgB,EAAA,EAAD,CAAQvB,GAAG,OAAOwB,QAAQ,OAA1B,SACI,cAACC,EAAA,EAAD,UACI,cAACF,EAAA,EAAOG,MAAR,mCAGR,qBAAKC,UAAU,oBAAf,SACI,qBAAK1B,MAAO,CAAC2B,QAAQ,OAAOC,eAAe,UAA3C,gBACKd,QADL,IACKA,OADL,EACKA,EAAae,MAAMC,KAAI,SAACC,EAAQnC,GAAT,OACpB,cAAC,EAAD,CAAgBU,KAAMyB,EAAInC,MAAOA,gBCjB1CoC,EATH,WAEV,OACI,8BACE,cAAC,EAAD,OCOOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.2a975eaf.chunk.js","sourcesContent":["import { Card } from \"react-bootstrap\"\r\nimport {useEffect, useState} from \"react\";\r\n\r\n\r\nexport const WeatherDetails = (props: any) => {\r\n\r\n    const [weekday,setWeekday] = useState<any>();\r\n\r\n    useEffect(() => {\r\n        const date = new Date();\r\n        date.setDate(date.getDate() + props.index);\r\n        const weekday = date.toLocaleDateString('pl-pl', { weekday: 'long' });\r\n        setWeekday(weekday);\r\n    });\r\n\r\n    return (\r\n        <Card bg='Dark' style={{width: '10rem'}}>\r\n            <Card.Body>\r\n                <Card.Title>{weekday}</Card.Title>\r\n               <div style={{height:'5rem'}}>\r\n                   <img src={`http://openweathermap.org/img/wn/${props.data.weather[0].icon}@2x.png`}/>\r\n               </div>\r\n                <Card.Title>{Math.floor(props.data.temp.day)}</Card.Title>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}","import {Container, Navbar} from \"react-bootstrap\";\r\nimport {WeatherDetails} from \"../WeatherDetails/WeatherDetails\";\r\nimport { useEffect, useState} from \"react\";\r\nimport './WeatherOverview.css';\r\n\r\n\r\nexport const WeatherOverview = (props: any) => {\r\n\r\n    const [ weatherData, setWeatherData] = useState<any>();\r\n\r\n    useEffect(() => {\r\n        fetch('https://api.openweathermap.org/data/2.5/onecall?lat=52.4064&lon=16.9252&exclude=hourly,minutely&units=metric&lang=pl&appid=e7dbf2490167397151d02b2e61d9f83b')\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                console.log('data',data);\r\n                setWeatherData(data)\r\n            })\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Container>\r\n                    <Navbar.Brand>Weather Forecast</Navbar.Brand>\r\n                </Container>\r\n            </Navbar>\r\n            <div className=\"container-element\">\r\n                <div style={{display:'flex',justifyContent:'center'}}>\r\n                    {weatherData?.daily.map((el: any,index: number) => (\r\n                        <WeatherDetails data={el} index={index}/>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import \"react-bootstrap/dist/react-bootstrap.min.js\";\nimport { WeatherOverview } from \"./weather/components/WeatherOverview/WeatherOverview\";\n\nconst App = () => {\n\n  return (\n      <div>\n        <WeatherOverview/>\n      </div>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}