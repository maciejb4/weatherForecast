{"version":3,"sources":["weather/components/WeatherDetails/WeatherDetails.tsx","weather/components/WeatherSpecific/WeatherSpecific.tsx","weather/components/WeatherOverview/WeatherOverview.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["WeatherDetails","props","useState","weekday","setWeekday","useEffect","date","Date","setDate","getDate","index","toLocaleDateString","Card","bg","style","width","Body","Title","height","src","data","weather","icon","Math","round","temp","day","WeatherSpecific","sunrise","el","toLocaleTimeString","sunset","className","paddingTop","padding","textAlign","floor","Tabs","defaultActiveKey","id","Tab","eventKey","title","Table","borderless","morn","eve","night","feels_like","display","alignItems","flexBasis","Provider","value","size","marginLeft","WeatherOverview","weatherData","setWeatherData","selectedItem","setSelectedItem","fetch","then","res","json","daily","Navbar","variant","Container","Brand","justifyContent","map","onClick","cursor","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b676cbfb.chunk.js","sourcesContent":["import { Card } from \"react-bootstrap\"\r\nimport {useEffect, useState} from \"react\";\r\n\r\n\r\nexport const WeatherDetails = (props: any) => {\r\n\r\n    const [weekday,setWeekday] = useState<any>();\r\n\r\n    useEffect(() => {\r\n        const date = new Date();\r\n        date.setDate(date.getDate() + props.index);\r\n        const weekday = date.toLocaleDateString('en-en', { weekday: 'long' });\r\n        setWeekday(weekday);\r\n    });\r\n\r\n    return (\r\n        <Card bg='Dark' style={{width: '10rem'}}>\r\n            <Card.Body>\r\n                <Card.Title>{weekday}</Card.Title>\r\n               <div style={{height:'6rem'}}>\r\n                   <img src={`http://openweathermap.org/img/wn/${props.data.weather[0].icon}@2x.png`}/>\r\n               </div>\r\n                <Card.Title>{Math.round(props.data.temp.day)}</Card.Title>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}","import {Card, Tab, Table, Tabs} from \"react-bootstrap\";\r\nimport {useEffect, useState} from \"react\";\r\nimport { BsSunset, BsSunrise } from 'react-icons/bs'\r\nimport { IconContext } from \"react-icons\";\r\n\r\n\r\nexport const WeatherSpecific = (props: any) => {\r\n\r\n    const [weekday,setWeekday] = useState<any>();\r\n    const sunrise = new Date(props.data.el.sunrise*1000).toLocaleTimeString();\r\n    const sunset = new Date(props.data.el.sunset*1000).toLocaleTimeString();\r\n\r\n    useEffect(() => {\r\n        const date = new Date();\r\n        date.setDate(date.getDate() + props.data.index);\r\n        const weekday = date.toLocaleDateString('en-en', { weekday: 'long' });\r\n        setWeekday(weekday);\r\n    },[props.data.index]);\r\n\r\n    return(\r\n        <Card bg='Dark' style={{width: '50rem'}}>\r\n            <div className=\"row\" style={{paddingTop:'10px'}}>\r\n                <div className=\"col-md-4 col-12\">\r\n                    <div style={{padding:'1rem',textAlign:'center'}}>\r\n                        <Card.Title>{weekday}</Card.Title>\r\n                        <div style={{height:'7rem'}}>\r\n                            <img src={`http://openweathermap.org/img/wn/${props.data.el.weather[0].icon}@2x.png`}/>\r\n                        </div>\r\n                        <Card.Title>{Math.floor(props.data.el.temp.day)}</Card.Title>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-8 col-12\">\r\n                    <Tabs defaultActiveKey=\"temperature\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\r\n                        <Tab eventKey=\"temperature\" title=\"Temperature\">\r\n                            <Table borderless>\r\n                                <thead>\r\n                                <tr>\r\n                                    <th></th>\r\n                                    <th>Morning</th>\r\n                                    <th>Afternoon</th>\r\n                                    <th>Evening</th>\r\n                                    <th>Night</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td>Temperature</td>\r\n                                    <td>{Math.round(props.data.el.temp.morn)} °C</td>\r\n                                    <td>{Math.round(props.data.el.temp.day)} °C</td>\r\n                                    <td>{Math.round(props.data.el.temp.eve)} °C</td>\r\n                                    <td>{Math.round(props.data.el.temp.night)} °C</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Feels Like</td>\r\n                                    <td>{Math.round(props.data.el.feels_like.morn)} °C</td>\r\n                                    <td>{Math.round(props.data.el.feels_like.day)} °C</td>\r\n                                    <td>{Math.round(props.data.el.feels_like.eve)} °C</td>\r\n                                    <td>{Math.round(props.data.el.feels_like.night)} °C</td>\r\n                                </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        </Tab>\r\n                        <Tab eventKey=\"sun-journey\" title=\"Sun journey\">\r\n                            <div style={{display:'flex',alignItems:'center',height:'9rem'}}>\r\n                                <div style={{flexBasis:'50%',display:'flex',alignItems:'center'}}>\r\n                                    <IconContext.Provider value={{ size: '5rem' }}>\r\n                                        <BsSunrise/>\r\n                                    </IconContext.Provider>\r\n                                    <h4 style={{marginLeft:'1rem'}}>{sunrise}</h4>\r\n                                </div>\r\n                                <div style={{flexBasis:'50%',display:'flex',alignItems:'center'}}>\r\n                                    <IconContext.Provider value={{ size: '5rem' }}>\r\n                                        <BsSunset/>\r\n                                    </IconContext.Provider>\r\n                                    <h4 style={{marginLeft:'1rem'}}>{sunset}</h4>\r\n                                </div>\r\n                            </div>\r\n                        </Tab>\r\n                    </Tabs>\r\n                </div>\r\n            </div>\r\n        </Card>\r\n    )\r\n}","import {Container, Navbar} from \"react-bootstrap\";\r\nimport {WeatherDetails} from \"../WeatherDetails/WeatherDetails\";\r\nimport { useEffect, useState} from \"react\";\r\nimport './WeatherOverview.css';\r\nimport {WeatherSpecific} from \"../WeatherSpecific/WeatherSpecific\";\r\n\r\n\r\nexport const WeatherOverview = (props: any) => {\r\n\r\n    const [ weatherData, setWeatherData] = useState<any>(null);\r\n    const [ selectedItem, setSelectedItem ] = useState<any>();\r\n\r\n    useEffect(() => {\r\n        fetch('https://api.openweathermap.org/data/2.5/onecall?lat=52.4064&lon=16.9252&exclude=hourly,minutely&units=metric&lang=pl&appid=e7dbf2490167397151d02b2e61d9f83b')\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                setWeatherData(data);\r\n            })\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        weatherData && setSelectedItem({el:weatherData.daily[0],index:0});\r\n    },[weatherData]);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Container>\r\n                    <Navbar.Brand>Weather Forecast</Navbar.Brand>\r\n                </Container>\r\n            </Navbar>\r\n            <div className=\"container-element\">\r\n                <div style={{display:'flex',justifyContent:'center'}}>\r\n                    {weatherData?.daily.map((el: any,index: number) => (\r\n                        <div  onClick={() => setSelectedItem({el:el,index:index})}\r\n                              style={{cursor: 'pointer'}}\r\n                        >\r\n                            <WeatherDetails\r\n                                data={el}\r\n                                index={index}\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"bottom-element\">\r\n                {selectedItem && (\r\n                    <WeatherSpecific\r\n                        data={selectedItem}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import \"react-bootstrap/dist/react-bootstrap.min.js\";\nimport { WeatherOverview } from \"./weather/components/WeatherOverview/WeatherOverview\";\n\nconst App = () => {\n\n  return (\n      <div>\n        <WeatherOverview/>\n      </div>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}